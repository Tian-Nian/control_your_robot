import cv2
import numpy as np

right_mapping = {
    240: (0.634, 0.482),
    239: (0.390, 0.506),
    238: (0.413, 0.502),
    256: (0.636, 0.463),
    255: (0.388, 0.487),
    254: (0.411, 0.485),
    16:  (0.637, 0.444),
    15:  (0.388, 0.470),
    14:  (0.412, 0.466),
    32:  (0.635, 0.426),
    31:  (0.659, 0.427),
    30:  (0.410, 0.452),
    
    47: [(0.656, 0.412), (0.656, 0.400), (0.658, 0.384),
         (0.659, 0.372), (0.664, 0.363), (0.669, 0.355)],

    237: (0.060, 0.946),
    236: (0.717, 0.634),
    235: (0.743, 0.634),
    253: (0.697, 0.622),
    252: (0.716, 0.621),
    251: (0.733, 0.622),
    13:  (0.701, 0.612),
    12:  (0.715, 0.611),
    11:  (0.727, 0.610),
    29:  (0.701, 0.601),
    28:  (0.714, 0.599),
    27:  (0.725, 0.600),
    
    44: [(0.713, 0.586), (0.713, 0.562), (0.715, 0.535),
         (0.715, 0.514), (0.714, 0.492), (0.714, 0.457)],
    
    234: (0.777, 0.652),
    233: (0.801, 0.652),
    232: (0.112, 0.953),
    250: (0.788, 0.641),
    249: (0.801, 0.641),
    248: (0.819, 0.642),
    10:  (0.791, 0.631),
    9:   (0.803, 0.632),
    8:   (0.812, 0.632),
    26:  (0.791, 0.624),
    25:  (0.801, 0.623),
    24:  (0.812, 0.625),

    41: [(0.799, 0.591), (0.799, 0.565), (0.797, 0.533),
         (0.798, 0.511), (0.799, 0.492), (0.797, 0.473)],

    # ring
    231: (0.868, 0.622),
    230: (0.886, 0.621),
    229: (0.474, 0.954),
    247: (0.871, 0.610),
    246: (0.886, 0.608),
    245: (0.898, 0.608),
    7:   (0.876, 0.597),
    6:   (0.887, 0.596),
    5:   (0.897, 0.597),
    23:  (0.874, 0.585),
    22:  (0.886, 0.585),
    21:  (0.897, 0.585),

    38: [(0.886, 0.561), (0.884, 0.534), (0.882, 0.507),
         (0.882, 0.488), (0.882, 0.472), (0.878, 0.454)],

    # pinky
    228: (0.938, 0.567),
    227: (0.956, 0.567),
    226: (0.977, 0.571),
    244: (0.944, 0.550),
    243: (0.958, 0.551),
    242: (0.973, 0.554),
    4:   (0.946, 0.536),
    3:   (0.961, 0.538),
    2:   (0.974, 0.540),
    20:  (0.948, 0.523),
    19:  (0.965, 0.525),
    18:  (0.976, 0.526),

    35: [(0.962, 0.510), (0.963, 0.497), (0.961, 0.483),
         (0.963, 0.471), (0.962, 0.454), (0.959, 0.434)],

    # hand
    61: (0.740, 0.435),
    60: (0.753, 0.439),
    59: (0.766, 0.443),
    58: (0.779, 0.444),
    57: (0.797, 0.444),
    56: (0.811, 0.442),
    55: (0.828, 0.437),
    54: (0.839, 0.429),
    53: (0.850, 0.419),
    52: (0.862, 0.409),
    51: (0.878, 0.401),
    50: (0.892, 0.393),

    80: (0.393, 0.387),
    79: (0.669, 0.408),
    78: (0.711, 0.402),
    77: (0.732, 0.397),
    76: (0.751, 0.394),
    75: (0.766, 0.391),
    74: (0.782, 0.390),
    73: (0.800, 0.386),
    72: (0.820, 0.378),
    71: (0.833, 0.371),
    70: (0.845, 0.365),
    69: (0.853, 0.358),
    68: (0.862, 0.350),
    67: (0.872, 0.340),
    66: (0.884, 0.329),

    96: (0.668, 0.327),
    95: (0.678, 0.333),
    94: (0.686, 0.340),
    93: (0.697, 0.347),
    92: (0.707, 0.350),
    91: (0.722, 0.353),
    90: (0.742, 0.351),
    89: (0.765, 0.345),
    88: (0.787, 0.340),
    87: (0.802, 0.334),
    86: (0.821, 0.327),
    85: (0.834, 0.324),
    84: (0.845, 0.317),
    83: (0.853, 0.309),
    82: (0.869, 0.302),

    112: (0.711, 0.287),
    111: (0.722, 0.295),
    110: (0.733, 0.299),
    109: (0.741, 0.302),
    108: (0.752, 0.306),
    107: (0.760, 0.306),
    106: (0.769, 0.306),
    105: (0.781, 0.305),
    104: (0.792, 0.304),
    103: (0.803, 0.299),
    102: (0.813, 0.294),
    101: (0.826, 0.293),
    100: (0.837, 0.291),
    99:  (0.852, 0.284),
    98:  (0.863, 0.276),

    128: (0.746, 0.255),
    127: (0.755, 0.259),
    126: (0.764, 0.263),
    125: (0.770, 0.265),
    124: (0.781, 0.264),
    123: (0.792, 0.264),
    122: (0.802, 0.262),
    121: (0.808, 0.258),
    120: (0.814, 0.255),
    119: (0.819, 0.249),
    118: (0.822, 0.247),
    117: (0.832, 0.242),
    116: (0.845, 0.239),
    115: (0.851, 0.238),
    114: (0.861, 0.237),
}

left_mapping = {
    17: (0.634, 0.482),
    18: (0.390, 0.506),
    19: (0.413, 0.502),
    1:  (0.636, 0.463),
    2:  (0.388, 0.487),
    3:  (0.411, 0.485),
    241: (0.637, 0.444),
    242: (0.388, 0.470),
    243: (0.412, 0.466),
    225: (0.635, 0.426),
    226: (0.659, 0.427),
    227: (0.410, 0.452),

    210: [(0.656, 0.412), (0.656, 0.400), (0.658, 0.384),
          (0.659, 0.372), (0.664, 0.363), (0.669, 0.355)],

    20: (0.060, 0.946),
    21: (0.717, 0.634),
    22: (0.743, 0.634),
    4:  (0.697, 0.622),
    5:  (0.716, 0.621),
    6:  (0.733, 0.622),
    244: (0.701, 0.612),
    245: (0.715, 0.611),
    246: (0.727, 0.610),
    228: (0.701, 0.601),
    229: (0.714, 0.599),
    230: (0.725, 0.600),

    213: [(0.713, 0.586), (0.713, 0.562), (0.715, 0.535),
          (0.715, 0.514), (0.714, 0.492), (0.714, 0.457)],

    23: (0.777, 0.652),
    24: (0.801, 0.652),
    25: (0.112, 0.953),
    7:  (0.788, 0.641),
    8:  (0.801, 0.641),
    9:  (0.819, 0.642),
    247: (0.791, 0.631),
    248: (0.803, 0.632),
    249: (0.812, 0.632),
    231: (0.791, 0.624),
    232: (0.801, 0.623),
    233: (0.812, 0.625),

    216: [(0.799, 0.591), (0.799, 0.565), (0.797, 0.533),
          (0.798, 0.511), (0.799, 0.492), (0.797, 0.473)],

    26: (0.868, 0.622),
    27: (0.886, 0.621),
    28: (0.474, 0.954),
    10: (0.871, 0.610),
    11: (0.886, 0.608),
    12: (0.898, 0.608),
    250: (0.876, 0.597),
    251: (0.887, 0.596),
    252: (0.897, 0.597),
    234: (0.874, 0.585),
    235: (0.886, 0.585),
    236: (0.897, 0.585),

    219: [(0.886, 0.561), (0.884, 0.534), (0.882, 0.507),
          (0.882, 0.488), (0.882, 0.472), (0.878, 0.454)],

    29: (0.938, 0.567),
    30: (0.956, 0.567),
    31: (0.977, 0.571),
    13: (0.944, 0.550),
    14: (0.958, 0.551),
    15: (0.973, 0.554),
    253: (0.946, 0.536),
    254: (0.961, 0.538),
    255: (0.974, 0.540),
    237: (0.948, 0.523),
    238: (0.965, 0.525),
    239: (0.976, 0.526),

    222: [(0.962, 0.510), (0.963, 0.497), (0.961, 0.483),
          (0.963, 0.471), (0.962, 0.454), (0.959, 0.434)],

    196: (0.740, 0.435),
    197: (0.753, 0.439),
    198: (0.766, 0.443),
    199: (0.779, 0.444),
    200: (0.797, 0.444),
    201: (0.811, 0.442),
    202: (0.828, 0.437),
    203: (0.839, 0.429),
    204: (0.850, 0.419),
    205: (0.862, 0.409),
    206: (0.878, 0.401),
    207: (0.892, 0.393),

    177: (0.393, 0.387),
    178: (0.669, 0.408),
    179: (0.711, 0.402),
    180: (0.732, 0.397),
    181: (0.751, 0.394),
    182: (0.766, 0.391),
    183: (0.782, 0.390),
    184: (0.800, 0.386),
    185: (0.820, 0.378),
    186: (0.833, 0.371),
    187: (0.845, 0.365),
    188: (0.853, 0.358),
    189: (0.862, 0.350),
    190: (0.872, 0.340),
    191: (0.884, 0.329),

    161: (0.668, 0.327),
    162: (0.678, 0.333),
    163: (0.686, 0.340),
    164: (0.697, 0.347),
    165: (0.707, 0.350),
    166: (0.722, 0.353),
    167: (0.742, 0.351),
    168: (0.765, 0.345),
    169: (0.787, 0.340),
    170: (0.802, 0.334),
    171: (0.821, 0.327),
    172: (0.834, 0.324),
    173: (0.845, 0.317),
    174: (0.853, 0.309),
    175: (0.869, 0.302),

    145: (0.711, 0.287),
    146: (0.722, 0.295),
    147: (0.733, 0.299),
    148: (0.741, 0.302),
    149: (0.752, 0.306),
    150: (0.760, 0.306),
    151: (0.769, 0.306),
    152: (0.781, 0.305),
    153: (0.792, 0.304),
    154: (0.803, 0.299),
    155: (0.813, 0.294),
    156: (0.826, 0.293),
    157: (0.837, 0.291),
    158: (0.852, 0.284),
    159: (0.863, 0.276),

    129: (0.746, 0.255),
    130: (0.755, 0.259),
    131: (0.764, 0.263),
    132: (0.770, 0.265),
    133: (0.781, 0.264),
    134: (0.792, 0.264),
    135: (0.802, 0.262),
    136: (0.808, 0.258),
    137: (0.814, 0.255),
    138: (0.819, 0.249),
    139: (0.822, 0.247),
    140: (0.832, 0.242),
    141: (0.845, 0.239),
    142: (0.851, 0.238),
    143: (0.861, 0.237),
}

# 创建一张白色背景图
img_height = 1000
img_width = 1000
img = np.ones((img_height, img_width, 3), dtype=np.uint8) * 255

# 画每个点
def draw(hand:str, force_map):
    if hand == "left":
        map = left_mapping
    else:
        map = right_mapping
    
    for key, value in map.items():
        if isinstance(value, list):
            points = value
        else:
            points = [value]
        
        for pt in points:
            # 将归一化坐标 (0~1) 转换为图像坐标
            x = int(pt[0] * img_width)
            y = int(pt[1] * img_height)

            color_intensity = max(0, 255 - int(force_map[key - 1]))

            cv2.circle(img, (x, y), radius=5, color=(0, 0, color_intensity), thickness=-1)
            cv2.putText(img, str(key), (x+5, y-5),
                        cv2.FONT_HERSHEY_SIMPLEX, 0.4, (0, 0, 0), 1)
    
    cv2.imshow('mapping_points.png', img)
    cv2.waitKey(1)
